apiVersion: v1
summary: Stop, Start, Delete GCP instances based on the tags
description: This workflow looks at all of the GCP instances in a given account and zone and enforces the power state based on the tags.
homepage: https://github.com/puppetlabs/relay-workflows/tree/master/gcp-instance-reaper
tags:
  - cost optimization

# Trigger to run this workflow hourly.
triggers:
- name: Hourly us-west1-a
  source:
    type: schedule
    schedule: '1 * * * *'
  binding:
    parameters:
      zone: us-west1-a
      dryRun: true
- name: Hourly us-west1-b
  source:
    type: schedule
    schedule: '2 * * * *'
  binding:
    parameters:
      zone: us-west1-b
      dryRun: true
- name: Hourly us-west1-c
  source:
    type: schedule
    schedule: '3 * * * *'
  binding:
    parameters:
      zone: us-west1-c
      dryRun: true

parameters:
  zone:
    description: The GCP zone to run in
    default: us-west1-c
  dryRun:
    description: True if this workflow should only print the resources it would delete
    default: 'true'
  requiredLabels:
    description: An array of required labels in JSON format
    default: '["geo","lifetime","owner"]'
  terminateDays:
    description: The number of days before an invalid machine is terminated
    default: 14

steps:
- name: list-instances
  image: relaysh/gcp-step-instance-list
  spec:
    google: &google
      service_account_info: !Connection { type: gcp, name: my-gcp-account }
      zone: !Parameter zone

- name: identify-instance-states
  image: relaysh/core:latest-python
  spec:
    instances: !Output {from: list-instances, name: instances}
    requiredLabels: !Parameter requiredLabels
    terminateDays: !Parameter terminateDays
# The current version of this script can be found in the `raw` link at https://gist.github.com/jarretlavallee/cecbab051b39cddaaaffa1fe727a3f72
  inputFile: https://gist.github.com/jarretlavallee/cecbab051b39cddaaaffa1fe727a3f72/raw/43daa5f1af036ae030b16a618dd00d6ba46abfaa/get-instance-states.py

- name: stop-instances
  dependsOn: identify-instance-states
  image: relaysh/gcp-step-instance-stop
  spec:
    google: *google
    instances: !Output {from: identify-instance-states, name: to_terminate}

## Disabled until further testing has been done
# - name: delete-instances
#   dependsOn: identify-instance-states
#   image: relaysh/gcp-step-instance-delete
#   when:
#     - !Fn.equals [!Parameter dryRun, 'false']
#   spec:
#     google: *google
#     instances: !Output {from: identify-instance-states, name: to_delete}

- name: start-instances
  dependsOn: identify-instance-states
  image: relaysh/gcp-step-instance-start
  spec:
    google: *google
    instances: !Output {from: identify-instance-states, name: to_start}

- name: resume-instances
  dependsOn: identify-instance-states
  image: relaysh/gcp-step-instance-start
  spec:
    google: *google
    instances: !Output {from: identify-instance-states, name: to_resume}
  inputFile: https://gist.github.com/jarretlavallee/cecbab051b39cddaaaffa1fe727a3f72/raw/43daa5f1af036ae030b16a618dd00d6ba46abfaa/gcp-instance-resume.py

- name: suspend-instances
  dependsOn: identify-instance-states
  image: relaysh/gcp-step-instance-stop
  spec:
    google: *google
    instances: !Output {from: identify-instance-states, name: to_suspend}
  inputFile: https://gist.github.com/jarretlavallee/cecbab051b39cddaaaffa1fe727a3f72/raw/43daa5f1af036ae030b16a618dd00d6ba46abfaa/gcp-instance-suspend.py
